name: docker

on:
  push:
    branches: ["main"]
    tags: ["*"]

env:
  IMAGE_NAME: ugwuanyi/sau

jobs:
  buildDockerImage:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and Publish docker image to dockerhub
        run: docker buildx build --build-arg="APP_VERSION=${{ github.ref_name }}" --platform linux/amd64,linux/arm64,linux/arm/v7 -t ${{ env.IMAGE_NAME }}:${{ github.ref_name }} -f docker/Dockerfile --push .

      - name: Build and Publish docker image for tags
        if: github.ref_type == 'tag'
        run: docker buildx build --build-arg="APP_VERSION=${{ github.ref_name }}" --platform linux/amd64,linux/arm64,linux/arm/v7 -t ${{ env.IMAGE_NAME }}:latest -f docker/Dockerfile --push .

  push-ghrc-image:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and Publish image to ghcr.io
        run: docker buildx build --build-arg="APP_VERSION=${{ github.ref_name }}" --platform linux/amd64,linux/arm64,linux/arm/v7 --label "org.opencontainers.image.source=https://github.com/emylincon/sau" -t ${{ env.IMAGE_NAME }}:${{ github.ref_name }} -f docker/Dockerfile --push .

      - name: Build and Publish docker image for tags to ghcr.io
        if: github.ref_type == 'tag'
        run: docker buildx build --build-arg="APP_VERSION=${{ github.ref_name }}" --platform linux/amd64,linux/arm64,linux/arm/v7 --label "org.opencontainers.image.source=https://github.com/emylincon/sau" -t ${{ env.IMAGE_NAME }}:latest -f docker/Dockerfile --push .
